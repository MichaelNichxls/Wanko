//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Runtime/InputActions/CubismModelInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Wanko.Runtime.InputActions
{
    public partial class @CubismModelInputActions: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @CubismModelInputActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""CubismModelInputActions"",
    ""maps"": [
        {
            ""name"": ""CubismModel"",
            ""id"": ""6427a888-eb20-4c47-9e2a-b503754b5677"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9a070827-ab7e-47b0-88c7-a0c483be9db8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""Button"",
                    ""id"": ""5d4c10b0-4b9e-4224-9123-3d8d35da8f15"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Scroll"",
                    ""type"": ""PassThrough"",
                    ""id"": ""fb82324c-45e7-46c1-95eb-d8e40a66945a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4058fe51-7483-4a7a-a6b6-6cc543e81ecc"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9bf014a6-3f8b-47db-ac3d-2ca0638edf32"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c4024df-4c80-4974-9aee-490e5c9cf6f6"",
                    ""path"": ""<Touchscreen>/touch*/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d949548f-6031-4fa0-a74e-20b681d215f1"",
                    ""path"": ""<XRController>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33d0573d-351c-496d-9558-6ef137987f51"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8df7ef25-7b2c-49c8-9f91-b0c43d4e4432"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7bd39966-9c76-4363-8b54-3d0fa0f0e918"",
                    ""path"": ""<Pen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed262263-3b39-4816-a21b-0bf0b8367e79"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // CubismModel
            m_CubismModel = asset.FindActionMap("CubismModel", throwIfNotFound: true);
            m_CubismModel_Position = m_CubismModel.FindAction("Position", throwIfNotFound: true);
            m_CubismModel_Click = m_CubismModel.FindAction("Click", throwIfNotFound: true);
            m_CubismModel_Scroll = m_CubismModel.FindAction("Scroll", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // CubismModel
        private readonly InputActionMap m_CubismModel;
        private List<ICubismModelActions> m_CubismModelActionsCallbackInterfaces = new List<ICubismModelActions>();
        private readonly InputAction m_CubismModel_Position;
        private readonly InputAction m_CubismModel_Click;
        private readonly InputAction m_CubismModel_Scroll;
        public struct CubismModelActions
        {
            private @CubismModelInputActions m_Wrapper;
            public CubismModelActions(@CubismModelInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Position => m_Wrapper.m_CubismModel_Position;
            public InputAction @Click => m_Wrapper.m_CubismModel_Click;
            public InputAction @Scroll => m_Wrapper.m_CubismModel_Scroll;
            public InputActionMap Get() { return m_Wrapper.m_CubismModel; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(CubismModelActions set) { return set.Get(); }
            public void AddCallbacks(ICubismModelActions instance)
            {
                if (instance == null || m_Wrapper.m_CubismModelActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_CubismModelActionsCallbackInterfaces.Add(instance);
                @Position.started += instance.OnPosition;
                @Position.performed += instance.OnPosition;
                @Position.canceled += instance.OnPosition;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @Scroll.started += instance.OnScroll;
                @Scroll.performed += instance.OnScroll;
                @Scroll.canceled += instance.OnScroll;
            }

            private void UnregisterCallbacks(ICubismModelActions instance)
            {
                @Position.started -= instance.OnPosition;
                @Position.performed -= instance.OnPosition;
                @Position.canceled -= instance.OnPosition;
                @Click.started -= instance.OnClick;
                @Click.performed -= instance.OnClick;
                @Click.canceled -= instance.OnClick;
                @Scroll.started -= instance.OnScroll;
                @Scroll.performed -= instance.OnScroll;
                @Scroll.canceled -= instance.OnScroll;
            }

            public void RemoveCallbacks(ICubismModelActions instance)
            {
                if (m_Wrapper.m_CubismModelActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(ICubismModelActions instance)
            {
                foreach (var item in m_Wrapper.m_CubismModelActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_CubismModelActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public CubismModelActions @CubismModel => new CubismModelActions(this);
        public interface ICubismModelActions
        {
            void OnPosition(InputAction.CallbackContext context);
            void OnClick(InputAction.CallbackContext context);
            void OnScroll(InputAction.CallbackContext context);
        }
    }
}
